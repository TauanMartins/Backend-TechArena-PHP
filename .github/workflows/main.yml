name: Build and Deploy

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: Prepare .env file
      run: |
        cp .env.example .env
        echo APP_ENV=${{ github.ref == 'refs/heads/main' && 'production' || 'local' }} >> .env
        echo APP_DEBUG=${{ github.ref == 'refs/heads/main' && 'false' || 'true' }} >> .env
        echo DB_CONNECTION=pgsql >> .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
        echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env
        echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
        echo DB_PASSWORD="${{ secrets.DB_PASSWORD }}" >> .env
    - name: Build the Docker image
      run: |
        docker build -t backend .
    - name: Save Docker image to file
      run: docker save backend -o backend.tar
    - name: Copy Docker image to remote server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        source: backend.tar
        target: /tmp

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: SSH into remote server and load Docker image
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: |
          docker load -i /tmp/backend.tar
          rm /tmp/backend.tar
    - name: SSH into remote server and start Docker container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: |
          docker rm -f backend || true
          docker run -d --name backend -p 8000:8000 backend 
          docker image prune -af
